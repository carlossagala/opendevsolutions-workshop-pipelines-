apiVersion: v1
kind: Template
metadata:
  name: pipeline-template
  annotations:
    openshift.io/display-name: Spring Pipeline
    iconClass: fa fa-code
    description: Templates to generate the pipeline for an application.
objects:
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: ${APP_NAME}:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      type: Binary
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: java:8
          namespace: openshift
      type: Source
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    to:
      kind: Service
      name: ${APP_NAME}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    ports:
      - name: 8080-tcp
        port: 8080
        protocol: TCP
        targetPort: 8080
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
- apiVersion: v1
  data:
    application.properties: message=HOLA DESDE EL NAMESPACE ${ENTORNO}
  kind: ConfigMap
  metadata:
    labels:
      app: ${APP_NAME}
    name: spring-app-config
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    replicas: 1
    selector:
      deploymentconfig: ${APP_NAME}
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APP_NAME}
          deploymentconfig: ${APP_NAME}
      spec:
        containers:
        - image: ${APP_NAME}@latest
          imagePullPolicy: Always
          name: ${APP_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          volumeMounts:
          - mountPath: /deployments/config
            name: volume-t4era
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: application.properties
              path: application.properties
            name: spring-app-config
          name: volume-t4era
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APP_NAME}
        from:
          kind: ImageStreamTag
          name: ${APP_NAME}:latest
      type: ImageChange
    - type: ConfigChange
parameters:
- name: APP_NAME
  displayName: Nombre de la aplicacion
  description: Nombre de la aplicacion
  required: true
  value: hello-openshift
- name: ENTORNO
  displayName: variable de la aplicacion
  description: variable de la aplicacion
  value: ""
